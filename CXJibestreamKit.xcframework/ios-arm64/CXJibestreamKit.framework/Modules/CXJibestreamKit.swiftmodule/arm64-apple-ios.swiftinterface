// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target arm64-apple-ios16.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name CXJibestreamKit
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import CXJibestreamKit
import Common
import Foundation
import JMapControllerKit
import JMapCoreKit
import JMapNavigationKit
import SceneKit
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc public class JMapManager : ObjectiveC.NSObject {
  public var shouldFollowUser: Swift.Bool
  public var onDestinationSelected: ((Foundation.NSNumber) -> Swift.Void)?
  public var onNavigationInstructionUpdated: ((Common.NavigationInstruction) -> Swift.Void)?
  public var onMapPanned: (() -> Swift.Void)?
  public init(jMapConfig: CXJibestreamKit.JMapConfig)
  @objc deinit
}
extension CXJibestreamKit.JMapManager : Common.IndoorMappable {
  public func initMap(indoorMapInitialised: @escaping ((Common.CXError?) -> Swift.Void))
  public var isMapInitialized: Swift.Bool {
    get
  }
  public func getFloors() -> [Common.IndoorMapFloor]
  public func getDestinations(relativeTo point: CoreFoundation.CGPoint) -> [Common.IndoorMapDestination]
  public func getAmenities(relativeTo point: CoreFoundation.CGPoint) -> [Common.IndoorMapAmenity]
  public func getCurrentFloor() -> Common.IndoorMapFloor?
  public func getIndoorMapView() -> UIKit.UIView
  public func updateUserPosition(position: SceneKit.SCNVector3, relativeTo relativePoint: CoreFoundation.CGPoint, userHeading: Foundation.NSNumber)
  public func getUserPosition() -> CoreFoundation.CGPoint?
}
extension CXJibestreamKit.JMapManager : JMapControllerKit.JMapDelegate {
  @objc dynamic public func jmapInitialized(_ error: JMapCoreKit.JMapError?)
  @objc dynamic public func canvas(_ canvas: JMapRenderingKit.JMapCanvas, detectedTapOnElement element: Any?, at point: CoreFoundation.CGPoint)
  @objc dynamic public func canvas(_ canvas: JMapRenderingKit.JMapCanvas, scrollViewDidPan anchorPoint: CoreFoundation.CGPoint)
  public func getAndDrawNavPath(to destinationId: Foundation.NSNumber, relativeTo relativePoint: CoreFoundation.CGPoint) -> [SceneKit.SCNVector3]
  public func stopNavigation()
  public func cleanup()
}
extension CXJibestreamKit.JMapManager {
  public func focusUserPosition()
}
public class JMapConfig {
  public init(host: Swift.String, clientID: Swift.String, clientSecret: Swift.String, customerID: Swift.Int, venueID: Swift.Int)
  @objc deinit
}
